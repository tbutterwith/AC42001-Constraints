$ The quasiGroup existence problem (CSP lib problem 3)
$
$ An m order quasigroup  is an mxm multiplication table of integers 1..m, 
$ where each element occurrs exactly once in each row and column and certain 
$ multiplication axioms hold (in this case, we want axiom 4 to hold). 
$
$ by Ian Miguel

language ESSENCE' 1.0
given n : int(1..1000)
letting nDomain be domain int(0..n-1)

find quasiGroup : matrix indexed by [nDomain, nDomain] of nDomain
find qgDiagonal : matrix indexed by [nDomain] of nDomain

such that 
     $ accessor for diagonal
     forAll i : nDomain .
         qgDiagonal[i] = quasiGroup[i,i],

     $ All rows have to be different
     forAll row : nDomain . 
          allDiff(quasiGroup[row,..]),

     $ All columns have to be different	       
     forAll col : nDomain . 
          allDiff(quasiGroup[..,col]),

     $ (j*i)*(i*j) = i
     forAll i : nDomain .
          forAll j : nDomain .	
	        quasiGroup[quasiGroup[j,i],quasiGroup[i,j]] = i,

     $ Implied (from Colton,Miguel 01)
     $ All-diff diagonal
     allDiff(qgDiagonal),
     $ anti-Abelian
     forAll i : nDomain .
       forAll j : nDomain .
         (i != j) ->
         (quasiGroup[i,j] != quasiGroup[j,i]),
     $ if (i*i)=j then (j*j) = i
     forAll i : nDomain .
       forAll j : nDomain .
         (quasiGroup[i,i]=j) -> (quasiGroup[j,j]=i),

     $ Symmetry-breaking constraints	
     forAll i : nDomain .
           quasiGroup[i,n-1] + 2 >= i
